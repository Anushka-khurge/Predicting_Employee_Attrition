# -*- coding: utf-8 -*-
"""predicting employee attrition(Intermidiate level).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11qQW1zWVoT3nO_WBM7zKa5Sc4BuNUpv2
"""

#importing libraries
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns

import os

from google.colab import files
up= files.upload()

df= pd.read_csv('WA_Fn-UseC_-HR-Employee-Attrition.csv')
df.head()

df.shape

df.describe()

df.isnull().sum()

attrition_count= pd.DataFrame(df['Attrition'].value_counts())
attrition_count

plt.pie(attrition_count['Attrition'], labels= ['No', 'Yes'], explode= (0.2,0))

sns.countplot(df['Attrition'])

df.drop(['EmployeeCount', 'EmployeeNumber'], axis=1)

attrition_dummies= pd.get_dummies(df['Attrition'])
attrition_dummies.head()

df= pd.concat([df, attrition_dummies], axis=1)
df.head()

df= df.drop(['Attrition', 'No'], axis=1)
df.head()

sns.barplot(x='Gender', y='Yes', data= df)

sns.barplot(x='Department', y='Yes', data= df)

sns.barplot(x='BusinessTravel', y='Yes', data= df)

plt.figure(figsize=(10,6))
sns.heatmap(df.corr())

df= df.drop(['Age', 'JobLevel'], axis=1)

#data preprocessing
from sklearn.preprocessing import LabelEncoder
for column in df.columns:
  if df[column].dtype==np.number:
    continue
  else:
    df[column]=LabelEncoder().fit_transform(df[column])

#build a model
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
rf=RandomForestClassifier(n_estimators=10, criterion='entropy', random_state=0)

x= df.drop(['Yes'], axis=1)
y= df['Yes']

x_train, x_test, y_train, y_test= train_test_split(x,y, test_size=0.3, random_state=0)

x_train.head()

rf.fit(x_train, y_train)

rf.score(x_train, y_train)

# predicting for x_test
pred= rf.predict(x_test)

from sklearn.metrics import accuracy_score

accuracy_score(y_test, pred)



"""Accuracy for data that is tested= 85.03%"""

